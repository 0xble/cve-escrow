// SPDX-License-Identifier: MIT
pragma solidity 0.8.13;

import { DSTestPlus } from "./utils/DSTestPlus.sol";
import { Utilities } from "./utils/Utilities.sol";
import { console } from "./utils/Console.sol";

import { Greeter } from "../Greeter.sol";

contract GreeterTest is DSTestPlus {
    Utilities internal utils;
    address payable[] internal users;

    Greeter public greeter;

    function initUsers() public returns (address payable, address payable) {
        address payable alice = users[0];
        vm.label(alice, "Alice");

        address payable bob = users[1];
        vm.label(bob, "Bob");

        return (alice, bob);
    }

    function setUp() public {
        utils = new Utilities();
        users = utils.createUsers(5);

        greeter = new Greeter("Hello world!");
        vm.label(address(greeter), "greeter");
    }

    function testExample() public {
        (address payable alice, address payable bob) = initUsers();

        console.log("Alice's address", alice);

        vm.prank(alice);
        (bool sent, ) = bob.call{ value: 10 ether }("");
        assertTrue(sent);
        assertGt(bob.balance, alice.balance);
    }
}
